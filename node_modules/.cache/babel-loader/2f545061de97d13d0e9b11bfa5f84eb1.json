{"ast":null,"code":"var _jsxFileName = \"/Users/wangxi05104/Desktop/website/src/views/Login.js\";\nimport React from 'react';\nimport styles from '../styles/login.module.scss';\nimport 'antd/dist/antd.css';\nimport { Alert, Icon, message, Spin } from 'antd';\nimport CommonUtils from \"../tools/CommonUtils\";\nimport StorageUtils from \"../tools/StorageUtils\";\nimport WebServerRestClient from \"../tools/WebServerRestClient\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      showMessageDialog: false\n    };\n  }\n\n  componentDidMount() {}\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleInputFocus(event) {\n    const target = event.target;\n\n    if (target.type === 'text' || target.type === 'password') {\n      this.setState({\n        showMessageDialog: false\n      });\n    }\n  }\n\n  login() {\n    this.setState({\n      showMessageDialog: false\n    });\n    let email = this.state.email;\n    let password = this.state.password;\n\n    if (email == '') {\n      this.setState({\n        showMessageDialog: true,\n        message: \"Please enter the email address\"\n      });\n      return false;\n    }\n\n    if (!CommonUtils.checkEmail(email)) {\n      this.setState({\n        showMessageDialog: true,\n        message: \"Invalid email address format\"\n      });\n      return false;\n    }\n\n    if (password == '') {\n      this.setState({\n        showMessageDialog: true,\n        message: \"please enter the password\"\n      });\n      return false;\n    }\n\n    this.setState({\n      doing: true\n    });\n    new WebServerRestClient().POST('/open/web/login', {\n      email: this.state.email,\n      password: this.state.password\n    }).then(response => {\n      console.log(\"login response -> \" + JSON.stringify(response));\n      this.setState({\n        doing: false\n      });\n\n      if (response.code == 200) {\n        let userInfo = {\n          userId: response.data.userId,\n          email: response.data.email,\n          ethAddress: response.data.ethAddress,\n          token: response['msg']\n        };\n        StorageUtils.saveUser(userInfo);\n        window.CurrentUser = userInfo;\n        this.props.history.push('/user-center');\n      } else {\n        this.setState({\n          showMessageDialog: true,\n          message: response['msg']\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        doing: false\n      });\n      message.error(\"Error: \" + err.message);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.logo_image,\n      src: require('../images/logo.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.logo_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u4F7F\\u7528\\u677E\\u9F20\\u52A0\\u901F\\u5668APP\\u8D26\\u53F7\\u767B\\u5F55\"), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: 'text',\n      name: 'email',\n      className: styles.form_input,\n      placeholder: 'someone@gmail.com',\n      autoCapitalize: 'none',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: 'password',\n      name: 'password',\n      className: styles.form_input,\n      placeholder: '*********',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.showMessageDialog ? React.createElement(\"div\", {\n      className: \"message_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      message: this.state.message,\n      type: \"warning\",\n      closable: true,\n      onClose: () => {\n        this.setState({\n          showMessageDialog: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      className: styles.form_button_row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.form_button,\n      onClick: this.login.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.doing ? React.createElement(Spin, {\n      indicator: React.createElement(Icon, {\n        type: \"loading\",\n        className: \"icon_loading\",\n        spin: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }) : '登录')), React.createElement(\"div\", {\n      className: styles.link_download,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: styles.link_download,\n      href: \"http://www.opensquirrel.com/download.html\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\u8FD8\\u6CA1\\u6709\\u8D26\\u53F7\\uFF1F\\u4E0B\\u8F7DApp\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/wangxi05104/Desktop/website/src/views/Login.js"],"names":["React","styles","Alert","Icon","message","Spin","CommonUtils","StorageUtils","WebServerRestClient","Login","Component","constructor","props","state","email","password","showMessageDialog","componentDidMount","handleInputChange","event","target","value","type","checked","name","setState","handleInputFocus","login","checkEmail","doing","POST","then","response","console","log","JSON","stringify","code","userInfo","userId","data","ethAddress","token","saveUser","window","CurrentUser","history","push","catch","err","error","render","logo_image","require","logo_title","form_item","form_input","bind","form_button_row","form_button","link_download"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from '../styles/login.module.scss';\nimport 'antd/dist/antd.css';\nimport {Alert, Icon, message, Spin} from 'antd';\nimport CommonUtils from \"../tools/CommonUtils\";\nimport StorageUtils from \"../tools/StorageUtils\";\nimport WebServerRestClient from \"../tools/WebServerRestClient\";\n\nexport default class Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            showMessageDialog: false\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({[name]: value});\n    }\n\n    handleInputFocus(event) {\n        const target = event.target;\n        if (target.type === 'text' || target.type === 'password') {\n            this.setState({showMessageDialog: false});\n        }\n    }\n\n    login() {\n        this.setState({showMessageDialog: false});\n        let email = this.state.email;\n        let password = this.state.password;\n        if (email == '') {\n            this.setState({showMessageDialog: true, message: \"Please enter the email address\"});\n            return false;\n        }\n        if(!CommonUtils.checkEmail(email)){\n            this.setState({showMessageDialog: true, message: \"Invalid email address format\"});\n            return false;\n        }\n        if (password == '') {\n            this.setState({showMessageDialog: true, message: \"please enter the password\"});\n            return false;\n        }\n        this.setState({doing: true});\n        new WebServerRestClient().POST('/open/web/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(response => {\n            console.log(\"login response -> \" + JSON.stringify(response));\n            this.setState({doing: false});\n            if (response.code == 200) {\n                let userInfo = {\n                    userId: response.data.userId,\n                    email: response.data.email,\n                    ethAddress: response.data.ethAddress,\n                    token: response['msg']\n                };\n                StorageUtils.saveUser(userInfo);\n                window.CurrentUser = userInfo;\n                this.props.history.push('/user-center');\n            } else {\n                this.setState({showMessageDialog: true, message: response['msg']});\n            }\n        }).catch(err => {\n            this.setState({doing: false});\n            message.error(\"Error: \" + err.message);\n        });\n    }\n\n    render() {\n        return (\n            <div className={styles.login}>\n                <img className={styles.logo_image} src={require('../images/logo.png')}/>\n                <div className={styles.logo_title}>使用松鼠加速器APP账号登录</div>\n                <div className={styles.form_item}>\n                    <input type={'text'} name={'email'} className={styles.form_input}\n                           placeholder={'someone@gmail.com'}\n                           autoCapitalize={'none'}\n                           onFocus={this.handleInputFocus.bind(this)}\n                           onChange={this.handleInputChange.bind(this)}/>\n                </div>\n                <div className={styles.form_item}>\n                    <input type={'password'} name={'password'} className={styles.form_input}\n                           placeholder={'*********'}\n                           onFocus={this.handleInputFocus.bind(this)}\n                           onChange={this.handleInputChange.bind(this)}/>\n                </div>\n                <div className={styles.form_item}>\n                    {this.state.showMessageDialog ?\n                        <div className=\"message_box\">\n                            <Alert message={this.state.message} type=\"warning\" closable={true}\n                                   onClose={() => {\n                                       this.setState({showMessageDialog: false})\n                                   }}/>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n                <div className={styles.form_button_row}>\n                    <button className={styles.form_button} onClick={this.login.bind(this)}>\n                        {this.state.doing ?\n                            <Spin indicator={<Icon type=\"loading\" className='icon_loading' spin/>}/>\n                            :\n                            '登录'\n                        }\n                    </button>\n                </div>\n                <div className={styles.link_download}>\n                    <a className={styles.link_download} href=\"http://www.opensquirrel.com/download.html\">还没有账号？下载App</a>\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}