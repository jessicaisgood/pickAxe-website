{"ast":null,"code":"var _jsxFileName = \"/Users/wangxi05104/Desktop/website/src/views/modal/LoginRegisterModal.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../../styles/modal/login-modal.module.scss';\nimport 'antd/dist/antd.css';\nimport { Modal, Input, Alert, Button, message, Icon, Result } from 'antd';\nimport CommonUtils from \"../../tools/CommonUtils\";\nimport StorageUtils from \"../../tools/StorageUtils\";\nimport WebServerRestClient from \"../../tools/WebServerRestClient\";\nexport default class LoginRegisterModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true,\n      email: '',\n      password: '',\n      showMessageDialog: false,\n      isLogginIn: false\n    };\n  }\n\n  componentDidMount() {}\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleInputFocus(event) {\n    const target = event.target;\n\n    if (target.type === 'text' || target.type === 'password') {\n      this.setState({\n        showMessageDialog: false\n      });\n    }\n  }\n\n  login() {\n    ////////\n    this.setState({\n      isLoggedIn: true\n    });\n    this.setState({\n      showMessageDialog: false\n    });\n    let email = this.state.email;\n    let password = this.state.password;\n\n    if (email == '') {\n      this.setState({\n        showMessageDialog: true,\n        message: \"Please enter the email address\"\n      });\n      return false;\n    }\n\n    if (!CommonUtils.checkEmail(email)) {\n      this.setState({\n        showMessageDialog: true,\n        message: \"Invalid email address format\"\n      });\n      return false;\n    }\n\n    if (password == '') {\n      this.setState({\n        showMessageDialog: true,\n        message: \"please enter the password\"\n      });\n      return false;\n    }\n\n    this.setState({\n      processing: true\n    });\n    new WebServerRestClient().POST('/open/web/login', {\n      email: this.state.email,\n      password: this.state.password\n    }).then(response => {\n      console.log(\"login response -> \" + JSON.stringify(response));\n      this.setState({\n        processing: false\n      });\n\n      if (response.code == 200) {\n        let userInfo = {\n          userId: response.data.userId,\n          email: response.data.email,\n          ethAddress: response.data.ethAddress,\n          token: response['msg']\n        };\n        StorageUtils.saveUser(userInfo);\n        window.CurrentUser = userInfo;\n        this.props.loginCallback();\n      } else {\n        this.setState({\n          showMessageDialog: true,\n          message: response['msg']\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        processing: false\n      });\n      message.error(\"Error: \" + err.message);\n    });\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return React.createElement(Result, {\n        status: \"success\",\n        title: window.language.payment_results.success,\n        subtitle: window.language.payment_results.success_details,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Modal, {\n        closable: false,\n        keyboard: true,\n        maskClosable: true,\n        destroyOnClose: true,\n        footer: null,\n        visible: this.props.visible,\n        onCancel: () => this.props.onRequestClose(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal_close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"close-circle\",\n        onClick: () => this.props.onRequestClose(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.login,\n        style: {\n          display: this.state.isLogin ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.logo_image,\n        src: require('../../images/logo.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.logo_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"SquirrelVPN\"), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: 'text',\n        name: 'email',\n        className: styles.form_input,\n        placeholder: 'someone@gmail.com',\n        autoCapitalize: 'none',\n        onFocus: this.handleInputFocus.bind(this),\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Input.Password, {\n        type: 'password',\n        name: 'password',\n        className: styles.form_input,\n        placeholder: 'Password',\n        onFocus: this.handleInputFocus.bind(this),\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.showMessageDialog ? React.createElement(\"div\", {\n        className: \"message_box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        message: this.state.message,\n        type: \"warning\",\n        closable: true,\n        onClose: () => {\n          this.setState({\n            showMessageDialog: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })) : null), React.createElement(\"div\", {\n        className: styles.form_button_row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: styles.form_button,\n        loading: this.state.processing,\n        onClick: this.login.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, window.language.login_text)), React.createElement(\"div\", {\n        className: styles.link_download,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.link_download,\n        onClick: () => {\n          // this.setState({isLogin: false})\n          Modal.info({\n            content: window.language.register_tip\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, window.language.register_link))), React.createElement(\"div\", {\n        className: styles.login,\n        style: {\n          display: this.state.isLogin ? 'none' : 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: styles.logo_image,\n        src: require('../../images/logo.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.logo_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"SquirrelVPN\\u6CE8\\u518C\"), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: 'text',\n        name: 'email',\n        className: styles.form_input,\n        placeholder: 'someone@gmail.com',\n        autoCapitalize: 'none',\n        onFocus: this.handleInputFocus.bind(this),\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Input.Password, {\n        type: 'password',\n        name: 'password',\n        className: styles.form_input,\n        style: {\n          textIndent: 0\n        },\n        placeholder: 'Password',\n        onFocus: this.handleInputFocus.bind(this),\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: 'text',\n        name: 'email',\n        className: styles.form_validation_input,\n        placeholder: 'Validation Code',\n        autoCapitalize: 'none',\n        onFocus: this.handleInputFocus.bind(this),\n        onChange: this.handleInputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: styles.form_validation_button,\n        loading: this.state.processing,\n        onClick: this.login.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Send\")), React.createElement(\"div\", {\n        className: styles.form_item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.state.showMessageDialog ? React.createElement(\"div\", {\n        className: \"message_box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        message: this.state.message,\n        type: \"warning\",\n        closable: true,\n        onClose: () => {\n          this.setState({\n            showMessageDialog: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })) : null), React.createElement(\"div\", {\n        className: styles.form_button_row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: styles.form_button,\n        loading: this.state.processing,\n        onClick: this.login.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\")), React.createElement(\"div\", {\n        className: styles.link_download,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.link_download,\n        onClick: () => this.setState({\n          isLogin: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"\\u5DF2\\u6709\\u8D26\\u53F7\\uFF1F\\u767B\\u5F55\"))));\n    }\n  }\n\n}\nLoginRegisterModal.propTypes = {\n  visible: PropTypes.bool,\n  loginCallback: PropTypes.func,\n  onRequestClose: PropTypes.func\n};","map":{"version":3,"sources":["/Users/wangxi05104/Desktop/website/src/views/modal/LoginRegisterModal.js"],"names":["React","PropTypes","styles","Modal","Input","Alert","Button","message","Icon","Result","CommonUtils","StorageUtils","WebServerRestClient","LoginRegisterModal","Component","constructor","props","state","isLogin","email","password","showMessageDialog","isLogginIn","componentDidMount","handleInputChange","event","target","value","type","checked","name","setState","handleInputFocus","login","isLoggedIn","checkEmail","processing","POST","then","response","console","log","JSON","stringify","code","userInfo","userId","data","ethAddress","token","saveUser","window","CurrentUser","loginCallback","catch","err","error","render","language","payment_results","success","success_details","visible","onRequestClose","display","logo_image","require","logo_title","form_item","form_input","bind","form_button_row","form_button","login_text","link_download","info","content","register_tip","register_link","textIndent","form_validation_input","form_validation_button","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../../styles/modal/login-modal.module.scss';\nimport 'antd/dist/antd.css';\nimport {Modal, Input, Alert, Button, message, Icon, Result} from 'antd';\nimport CommonUtils from \"../../tools/CommonUtils\";\nimport StorageUtils from \"../../tools/StorageUtils\";\nimport WebServerRestClient from \"../../tools/WebServerRestClient\";\n\nexport default class LoginRegisterModal extends React.Component {\n\n    static propTypes = {\n        visible: PropTypes.bool,\n        loginCallback: PropTypes.func,\n        onRequestClose: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: true,\n            email: '',\n            password: '',\n            showMessageDialog: false,\n            isLogginIn: false\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({[name]: value});\n    }\n\n    handleInputFocus(event) {\n        const target = event.target;\n        if (target.type === 'text' || target.type === 'password') {\n            this.setState({showMessageDialog: false});\n        }\n    }\n\n    login() {\n        ////////\n        this.setState({isLoggedIn: true});\n        this.setState({showMessageDialog: false});\n        let email = this.state.email;\n        let password = this.state.password;\n        if (email == '') {\n            this.setState({showMessageDialog: true, message: \"Please enter the email address\"});\n            return false;\n        }\n        if(!CommonUtils.checkEmail(email)){\n            this.setState({showMessageDialog: true, message: \"Invalid email address format\"});\n            return false;\n        }\n        if (password == '') {\n            this.setState({showMessageDialog: true, message: \"please enter the password\"});\n            return false;\n        }\n        this.setState({processing: true});\n        new WebServerRestClient().POST('/open/web/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(response => {\n            console.log(\"login response -> \" + JSON.stringify(response));\n            this.setState({processing: false});\n            if (response.code == 200) {\n                let userInfo = {\n                    userId: response.data.userId,\n                    email: response.data.email,\n                    ethAddress: response.data.ethAddress,\n                    token: response['msg']\n                };\n                StorageUtils.saveUser(userInfo);\n                window.CurrentUser = userInfo;\n                this.props.loginCallback();\n            } else {\n                this.setState({showMessageDialog: true, message: response['msg']});\n            }\n        }).catch(err => {\n            this.setState({processing: false});\n            message.error(\"Error: \" + err.message);\n        });\n    }\n\n    render() {\n        if (this.state.isLoggedIn) {\n            return (\n                <Result\n                    status=\"success\"\n                    title= {window.language.payment_results.success}\n                    subtitle= {window.language.payment_results.success_details}\n                />\n            );\n        } else {\n\n            return (\n                <Modal\n                    closable={false}\n                    keyboard={true}\n                    maskClosable={true}\n                    destroyOnClose={true}\n                    footer={null}\n                    visible={this.props.visible}\n                    onCancel={() => this.props.onRequestClose()}>\n                    <div className=\"modal_close\">\n                        <Icon type=\"close-circle\" onClick={() => this.props.onRequestClose()}/>\n                    </div>\n                    <div className={styles.login} style={{display: this.state.isLogin ? 'block' : 'none'}}>\n                        <img className={styles.logo_image} src={require('../../images/logo.png')}/>\n                        <div className={styles.logo_title}>SquirrelVPN</div>\n                        <div className={styles.form_item}>\n                            <Input type={'text'} name={'email'} className={styles.form_input}\n                                   placeholder={'someone@gmail.com'}\n                                   autoCapitalize={'none'}\n                                   onFocus={this.handleInputFocus.bind(this)}\n                                   onChange={this.handleInputChange.bind(this)}/>\n                        </div>\n                        <div className={styles.form_item}>\n                            <Input.Password type={'password'} name={'password'} className={styles.form_input}\n                                   placeholder={'Password'}\n                                   onFocus={this.handleInputFocus.bind(this)}\n                                   onChange={this.handleInputChange.bind(this)}/>\n                        </div>\n                        <div className={styles.form_item}>\n                            {this.state.showMessageDialog ?\n                                <div className=\"message_box\">\n                                    <Alert message={this.state.message} type=\"warning\" closable={true}\n                                           onClose={() => {\n                                               this.setState({showMessageDialog: false})\n                                           }}/>\n                                </div>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className={styles.form_button_row}>\n                            <Button className={styles.form_button} loading={this.state.processing}\n                                    onClick={this.login.bind(this)}>\n                                {window.language.login_text}\n                            </Button>\n                        </div>\n                        <div className={styles.link_download}>\n                            <span className={styles.link_download}\n                                  onClick={() => {\n                                      // this.setState({isLogin: false})\n                                      Modal.info({\n                                          content: window.language.register_tip\n                                      });\n                                  }}>\n                                {window.language.register_link}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div className={styles.login} style={{display: this.state.isLogin ? 'none' : 'block'}}>\n                        <img className={styles.logo_image} src={require('../../images/logo.png')}/>\n                        <div className={styles.logo_title}>SquirrelVPN注册</div>\n                        <div className={styles.form_item}>\n                            <Input type={'text'} name={'email'} className={styles.form_input}\n                                   placeholder={'someone@gmail.com'}\n                                   autoCapitalize={'none'}\n                                   onFocus={this.handleInputFocus.bind(this)}\n                                   onChange={this.handleInputChange.bind(this)}/>\n                        </div>\n                        <div className={styles.form_item}>\n                            <Input.Password  type={'password'} name={'password'} className={styles.form_input}\n                                   style={{textIndent: 0}}\n                                   placeholder={'Password'}\n                                   onFocus={this.handleInputFocus.bind(this)}\n                                   onChange={this.handleInputChange.bind(this)}/>\n                        </div>\n                        <div className={styles.form_item}>\n                            <Input type={'text'} name={'email'} className={styles.form_validation_input}\n                                   placeholder={'Validation Code'}\n                                   autoCapitalize={'none'}\n                                   onFocus={this.handleInputFocus.bind(this)}\n                                   onChange={this.handleInputChange.bind(this)}/>\n                            <Button className={styles.form_validation_button} loading={this.state.processing}\n                                    onClick={this.login.bind(this)}>Send</Button>\n                        </div>\n                        <div className={styles.form_item}>\n                            {this.state.showMessageDialog ?\n                                <div className=\"message_box\">\n                                    <Alert message={this.state.message} type=\"warning\" closable={true}\n                                           onClose={() => {\n                                               this.setState({showMessageDialog: false})\n                                           }}/>\n                                </div>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className={styles.form_button_row}>\n                            <Button className={styles.form_button} loading={this.state.processing}\n                                    onClick={this.login.bind(this)}>注册</Button>\n                        </div>\n                        <div className={styles.link_download}>\n                            <span className={styles.link_download} onClick={()=>this.setState({isLogin: true})}>已有账号？登录</span>\n                        </div>\n                    </div>\n                </Modal>\n            );\n        }\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}