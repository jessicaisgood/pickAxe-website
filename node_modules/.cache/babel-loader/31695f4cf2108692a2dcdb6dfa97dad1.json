{"ast":null,"code":"import { Component } from \"react\";\nimport CommonUtils from \"./CommonUtils\";\nexport default class StorageUtils extends Component {\n  /**\n   * save to local storage\n   * @param key\n   * @param value\n   */\n  static save(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  /**\n   * load from local storage\n   * @param key\n   * @returns {any}\n   */\n  static load(key) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  /**\n   * delete local storage\n   * @param key\n   */\n  static remove(key) {\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * save current user info\n   * @param userInfo\n   */\n  static saveUser(userInfo) {\n    this.save(window.constants.CURRENT_USER, CommonUtils.encodeBase64(JSON.stringify(userInfo)));\n  }\n\n  /**\n   * load current user info\n   */\n  static loadUser() {\n    let userInfo = this.load(window.constants.CURRENT_USER);\n\n    if (!userInfo) {\n      userInfo = {};\n      return userInfo;\n    }\n\n    return JSON.parse(CommonUtils.decodeBase64(userInfo));\n  }\n\n  /**\n   * load current user id\n   */\n  static getUserId() {\n    let userInfo = this.loadUser();\n    return userInfo.userId;\n  }\n\n  /**\n   * load current user email\n   */\n  static getEmail() {\n    let userInfo = this.loadUser();\n    return userInfo.email;\n  }\n\n  static hasToken() {\n    const CurrentUser = StorageUtils.loadUser();\n\n    if (!CurrentUser || !CurrentUser.token) {\n      console.log('CurrentUser is NULL');\n      return null;\n    } else {\n      return CurrentUser.token;\n    }\n  }\n\n  static setLanguage(language) {\n    localStorage.setItem(window.constants.LANGUAGE_KEY, language);\n  }\n\n  static getLanguage() {\n    let language = localStorage.getItem(window.constants.LANGUAGE_KEY);\n    if (!language) language = CommonUtils.getBrowserLanguage();\n    return language;\n  }\n\n}","map":{"version":3,"sources":["/Users/wangxi05104/Desktop/bitgas-website/src/tools/StorageUtils.js"],"names":["Component","CommonUtils","StorageUtils","save","key","value","localStorage","setItem","JSON","stringify","load","parse","getItem","remove","removeItem","saveUser","userInfo","window","constants","CURRENT_USER","encodeBase64","loadUser","decodeBase64","getUserId","userId","getEmail","email","hasToken","CurrentUser","token","console","log","setLanguage","language","LANGUAGE_KEY","getLanguage","getBrowserLanguage"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEhD;;;;;AAKA,SAAOG,IAAP,CAAYC,GAAZ,EAAiBC,KAAjB,EAAwB;AAEpBC,IAAAA,YAAY,CAACC,OAAb,CAAqBH,GAArB,EAA0BI,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA1B;AACH;;AAED;;;;;AAKA,SAAOK,IAAP,CAAYN,GAAZ,EAAiB;AAEb,WAAOI,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqBR,GAArB,CAAX,CAAP;AACH;;AAED;;;;AAIA,SAAOS,MAAP,CAAcT,GAAd,EAAmB;AAEfE,IAAAA,YAAY,CAACQ,UAAb,CAAwBV,GAAxB;AACH;;AAED;;;;AAIA,SAAOW,QAAP,CAAgBC,QAAhB,EAA0B;AAEtB,SAAKb,IAAL,CAAUc,MAAM,CAACC,SAAP,CAAiBC,YAA3B,EAAyClB,WAAW,CAACmB,YAAZ,CAAyBZ,IAAI,CAACC,SAAL,CAAeO,QAAf,CAAzB,CAAzC;AACH;;AAED;;;AAGA,SAAOK,QAAP,GAAmB;AACf,QAAIL,QAAQ,GAAG,KAAKN,IAAL,CAAUO,MAAM,CAACC,SAAP,CAAiBC,YAA3B,CAAf;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTA,MAAAA,QAAQ,GAAG,EAAX;AACA,aAAOA,QAAP;AACH;;AACD,WAAOR,IAAI,CAACG,KAAL,CAAWV,WAAW,CAACqB,YAAZ,CAAyBN,QAAzB,CAAX,CAAP;AACH;;AAED;;;AAGA,SAAOO,SAAP,GAAoB;AAChB,QAAIP,QAAQ,GAAG,KAAKK,QAAL,EAAf;AACA,WAAOL,QAAQ,CAACQ,MAAhB;AACH;;AAED;;;AAGA,SAAOC,QAAP,GAAmB;AACf,QAAIT,QAAQ,GAAG,KAAKK,QAAL,EAAf;AACA,WAAOL,QAAQ,CAACU,KAAhB;AACH;;AAED,SAAOC,QAAP,GAAkB;AACd,UAAMC,WAAW,GAAG1B,YAAY,CAACmB,QAAb,EAApB;;AACA,QAAI,CAACO,WAAD,IAAgB,CAACA,WAAW,CAACC,KAAjC,EAAwC;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACH,aAAOH,WAAW,CAACC,KAAnB;AACH;AACJ;;AAED,SAAOG,WAAP,CAAmBC,QAAnB,EAA4B;AACxB3B,IAAAA,YAAY,CAACC,OAAb,CAAqBU,MAAM,CAACC,SAAP,CAAiBgB,YAAtC,EAAoDD,QAApD;AACH;;AAGD,SAAOE,WAAP,GAAoB;AAChB,QAAIF,QAAQ,GAAG3B,YAAY,CAACM,OAAb,CAAqBK,MAAM,CAACC,SAAP,CAAiBgB,YAAtC,CAAf;AACA,QAAI,CAACD,QAAL,EACIA,QAAQ,GAAGhC,WAAW,CAACmC,kBAAZ,EAAX;AACJ,WAAOH,QAAP;AACH;;AAxF+C","sourcesContent":["import {Component} from \"react\";\nimport CommonUtils from \"./CommonUtils\";\n\nexport default class StorageUtils extends Component {\n\n    /**\n     * save to local storage\n     * @param key\n     * @param value\n     */\n    static save(key, value) {\n\n        localStorage.setItem(key, JSON.stringify(value));\n    };\n\n    /**\n     * load from local storage\n     * @param key\n     * @returns {any}\n     */\n    static load(key) {\n\n        return JSON.parse(localStorage.getItem(key));\n    };\n\n    /**\n     * delete local storage\n     * @param key\n     */\n    static remove(key) {\n\n        localStorage.removeItem(key)\n    };\n\n    /**\n     * save current user info\n     * @param userInfo\n     */\n    static saveUser(userInfo) {\n\n        this.save(window.constants.CURRENT_USER, CommonUtils.encodeBase64(JSON.stringify(userInfo)))\n    };\n\n    /**\n     * load current user info\n     */\n    static loadUser () {\n        let userInfo = this.load(window.constants.CURRENT_USER);\n        if(!userInfo){\n            userInfo = {};\n            return userInfo;\n        }\n        return JSON.parse(CommonUtils.decodeBase64(userInfo));\n    };\n\n    /**\n     * load current user id\n     */\n    static getUserId () {\n        let userInfo = this.loadUser();\n        return userInfo.userId;\n    };\n\n    /**\n     * load current user email\n     */\n    static getEmail () {\n        let userInfo = this.loadUser();\n        return userInfo.email;\n    };\n\n    static hasToken() {\n        const CurrentUser = StorageUtils.loadUser();\n        if (!CurrentUser || !CurrentUser.token) {\n            console.log('CurrentUser is NULL');\n            return null;\n        } else {\n            return CurrentUser.token;\n        }\n    }\n\n    static setLanguage(language){\n        localStorage.setItem(window.constants.LANGUAGE_KEY, language);\n    }\n\n\n    static getLanguage(){\n        let language = localStorage.getItem(window.constants.LANGUAGE_KEY);\n        if (!language)\n            language = CommonUtils.getBrowserLanguage();\n        return language;\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}