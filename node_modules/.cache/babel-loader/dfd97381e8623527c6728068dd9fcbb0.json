{"ast":null,"code":"var _jsxFileName = \"/Users/wangxi05104/Desktop/website/src/views/modal/PaymentModal.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../../styles/modal/payment-modal.module.scss';\nimport 'antd/dist/antd.css';\nimport { Button, message, Modal, Icon } from 'antd';\nimport WebServerRestClient from \"../../tools/WebServerRestClient\";\nimport StorageUtils from \"../../tools/StorageUtils\";\nimport CommonUtils from \"../../tools/CommonUtils\";\nexport default class PaymentModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      processing: false\n    };\n  }\n\n  selectPaymentMethod(method) {\n    if (!StorageUtils.hasToken()) {\n      // need to login\n      this.props.loginCallback('payment');\n      return;\n    }\n\n    if (method == 'credit') {\n      this.setState({\n        processing_credit: true\n      });\n      new WebServerRestClient().GET('/user/token-validation').then(response => {\n        this.setState({\n          processing_credit: false\n        });\n\n        if (response.code == 200) {\n          this.props.selectionCallback(method);\n        } else if (response.code == 401 || response.code == 403) {\n          this.props.loginCallback('payment');\n          message.warn(\"请登录！\");\n        } else {\n          message.warn(response['msg']);\n        }\n      }).catch(err => {\n        message.error(err.message);\n        this.setState({\n          processing_credit: false\n        });\n      });\n    } else if (method == 'alipay') {\n      this.setState({\n        processing_alipay: true\n      });\n      new WebServerRestClient().POST('/user/payment/create-alipay-order', {\n        purchasePlanId: this.props.productDetail.id,\n        paymentWay: 6,\n        userId: StorageUtils.getUserId()\n      }).then(response => {\n        CommonUtils.log(\"create-alipay-order response: \" + JSON.stringify(response));\n        this.setState({\n          processing_alipay: false\n        });\n\n        if (response.code == 200) {\n          // close this modal\n          this.props.selectionCallback(method); // go to Alipay page\n\n          window.open(response.data, '_self');\n        } else if (response.code == 401 || response.code == 403) {\n          // need to login\n          this.props.loginCallback('payment');\n        } else {\n          message.warn(response['msg']);\n        }\n      }).catch(err => {\n        this.setState({\n          processing_alipay: false\n        });\n        message.error(err.message);\n      });\n    }\n  }\n\n  render() {\n    let isChinese = StorageUtils.getLanguage() === window.constants.LANGUAGE_CN;\n    return React.createElement(Modal, {\n      closable: false,\n      keyboard: true,\n      maskClosable: true,\n      destroyOnClose: true,\n      footer: null,\n      visible: this.props.visible,\n      onCancel: () => this.props.onRequestClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal_close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"close-circle\",\n      onClick: () => this.props.onRequestClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, isChinese ? React.createElement(\"div\", {\n      className: styles.product_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"SquirrelVPN \", this.props.productDetail.monthTextCN) : React.createElement(\"div\", {\n      className: styles.product_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"SquirrelVPN \", this.props.productDetail.monthText), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.product_details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), window.language.payment_modal.detail1, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), window.language.payment_modal.detail2, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), window.language.payment_modal.detail3), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.product_price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.product_price_box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.product_price_box_filled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: styles.product_price_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"$\", this.props.productDetail.price, \" x \", this.props.productDetail.month, React.createElement(\"span\", {\n      className: styles.text_total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, window.language.payment_modal.total, \" $\", this.props.productDetail.amount, \" \"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.product_details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, window.language.payment_modal.select), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      icon: \"alipay\",\n      style: {\n        fontSize: \"16px\"\n      },\n      className: styles.payment_method_item,\n      loading: this.state.processing_alipay,\n      onClick: () => this.selectPaymentMethod('alipay'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, window.language.payment_modal.alipay), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      icon: \"credit-card\",\n      style: {\n        fontSize: \"16px\"\n      },\n      className: styles.payment_method_item,\n      loading: this.state.processing_credit,\n      onClick: () => this.selectPaymentMethod('credit'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \" \", window.language.payment_modal.credit))));\n  }\n\n}\nPaymentModal.propTypes = {\n  visible: PropTypes.bool,\n  productDetail: PropTypes.object,\n  loginCallback: PropTypes.func,\n  selectionCallback: PropTypes.func,\n  onRequestClose: PropTypes.func\n};","map":{"version":3,"sources":["/Users/wangxi05104/Desktop/website/src/views/modal/PaymentModal.js"],"names":["React","PropTypes","styles","Button","message","Modal","Icon","WebServerRestClient","StorageUtils","CommonUtils","PaymentModal","Component","constructor","props","state","processing","selectPaymentMethod","method","hasToken","loginCallback","setState","processing_credit","GET","then","response","code","selectionCallback","warn","catch","err","error","processing_alipay","POST","purchasePlanId","productDetail","id","paymentWay","userId","getUserId","log","JSON","stringify","window","open","data","render","isChinese","getLanguage","constants","LANGUAGE_CN","visible","onRequestClose","container","product_title","monthTextCN","monthText","product_details","language","payment_modal","detail1","detail2","detail3","product_price","product_price_box","product_price_box_filled","product_price_text","price","month","text_total","total","amount","select","fontSize","payment_method_item","alipay","credit","propTypes","bool","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../../styles/modal/payment-modal.module.scss';\nimport 'antd/dist/antd.css';\nimport {Button, message, Modal, Icon} from 'antd';\nimport WebServerRestClient from \"../../tools/WebServerRestClient\";\nimport StorageUtils from \"../../tools/StorageUtils\";\nimport CommonUtils from \"../../tools/CommonUtils\";\n\nexport default class PaymentModal extends React.Component {\n\n    static propTypes = {\n        visible: PropTypes.bool,\n        productDetail: PropTypes.object,\n        loginCallback: PropTypes.func,\n        selectionCallback: PropTypes.func,\n        onRequestClose: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            processing: false\n        }\n    }\n\n    selectPaymentMethod(method) {\n        if (!StorageUtils.hasToken()) {\n            // need to login\n            this.props.loginCallback('payment');\n            return;\n        }\n\n        if (method == 'credit'){\n            this.setState({processing_credit: true});\n            new WebServerRestClient().GET('/user/token-validation')\n                .then(response => {\n                    this.setState({processing_credit: false});\n                    if (response.code == 200) {\n                        this.props.selectionCallback(method);\n                    } else if (response.code == 401 || response.code == 403) {\n                        this.props.loginCallback('payment');\n                        message.warn(\"请登录！\")\n                    } else {\n                        message.warn(response['msg']);\n                    }\n                }).catch(err => {\n                message.error(err.message);\n                this.setState({processing_credit: false});\n            });\n        } else if (method == 'alipay') {\n            this.setState({processing_alipay: true});\n            new WebServerRestClient().POST('/user/payment/create-alipay-order', {\n                purchasePlanId: this.props.productDetail.id,\n                paymentWay: 6,\n                userId: StorageUtils.getUserId()\n            }).then(response => {\n                CommonUtils.log(\"create-alipay-order response: \" + JSON.stringify(response));\n                this.setState({processing_alipay: false});\n                if (response.code == 200) {\n                    // close this modal\n                    this.props.selectionCallback(method);\n\n                    // go to Alipay page\n                    window.open(response.data, '_self');\n                } else if (response.code == 401 || response.code == 403) {\n                    // need to login\n                    this.props.loginCallback('payment');\n                } else {\n                    message.warn(response['msg']);\n                }\n            }).catch(err => {\n                this.setState({processing_alipay: false});\n                message.error(err.message);\n            });\n        }\n    }\n\n\n    render() {\n        let isChinese = StorageUtils.getLanguage() === window.constants.LANGUAGE_CN;\n        return (\n            <Modal\n                closable={false}\n                keyboard={true}\n                maskClosable={true}\n                destroyOnClose={true}\n                footer={null}\n                visible={this.props.visible }\n                onCancel={() => this.props.onRequestClose()}>\n                <div className=\"modal_close\">\n                    <Icon type=\"close-circle\" onClick={() => this.props.onRequestClose()}/>\n                </div>\n                <div className={styles.container}>\n                    {isChinese ? (\n                      <div  className={styles.product_title}\n                      >SquirrelVPN {this.props.productDetail.monthTextCN}</div>\n                    ) : (\n                      <div  className={styles.product_title}\n                      >SquirrelVPN {this.props.productDetail.monthText}</div>\n                    )}\n\n                    <br/>\n                    <div  className={styles.product_details}\n                        >\n                         <Icon type=\"check\" />{window.language.payment_modal.detail1}<br/>\n                         {window.language.payment_modal.detail2}<br/>\n                         {window.language.payment_modal.detail3}</div>\n                    \n                    <br/>\n                    <div  className={styles.product_price}>\n                        <div className={styles.product_price_box}>\n                        </div>\n                        <div className={styles.product_price_box_filled}> </div>\n\n                        <div className={styles.product_price_text}>\n                           ${this.props.productDetail.price} x {this.props.productDetail.month}\n                           <span className={styles.text_total}>{window.language.payment_modal.total} ${this.props.productDetail.amount} </span>\n                        </div>\n                    </div>\n                    <div>\n                        <br/>\n                    <div className={styles.product_details}>{window.language.payment_modal.select}</div>\n                    <br/>\n                    <Button type=\"primary\" icon=\"alipay\" style={{fontSize: \"16px\"}} className={styles.payment_method_item}\n                            loading={this.state.processing_alipay}\n                            onClick={()=>this.selectPaymentMethod('alipay')}>{window.language.payment_modal.alipay}</Button>\n                    <br/>\n                    <br/>\n                    <Button type=\"primary\" icon=\"credit-card\"  style={{fontSize: \"16px\"}} className={styles.payment_method_item}\n                            loading={this.state.processing_credit}\n                            onClick={()=>this.selectPaymentMethod('credit')}> {window.language.payment_modal.credit}</Button>\n                    </div>\n                </div>\n            </Modal>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}