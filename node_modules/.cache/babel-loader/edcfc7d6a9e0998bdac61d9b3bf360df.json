{"ast":null,"code":"/**\n * Wallchain\n * Copyright 2018-Present The Wallchain Foundation\n *\n * This product includes software developed at The Wallchain Foundation.\n *\n * This file is part of the Wallchain library.\n * The Wallchain library is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * The Wallchain library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\n * along with the Wallchain library. If not, see <http://www.gnu.org/licenses/>.\n */\nimport { Component } from \"react\";\n\nconst uuidv1 = require('uuid/v1');\n\nconst uuidv4 = require('uuid/v4');\n\nconst base64 = require('base-64');\n\nexport default class CommonUtils extends Component {\n  static encodeBase64(str) {\n    return base64.encode(str);\n  }\n\n  static decodeBase64(str) {\n    return base64.decode(str);\n  }\n\n  static checkEmail(str) {\n    let reg = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (reg.test(str)) {\n      return true;\n    } else {\n      console.log(\"invalid email\");\n      return false;\n    }\n  }\n\n  static toDecimal(value, length) {\n    if (!length) length = 2;\n    let f = parseFloat(value);\n\n    if (isNaN(f)) {\n      return false;\n    }\n\n    let x_len = Math.pow(10, length);\n    f = Math.round(value * x_len) / x_len;\n    let s = f.toString();\n    let rs = s.indexOf('.');\n\n    if (rs < 0) {\n      rs = s.length;\n      s += '.';\n    }\n\n    while (s.length <= rs + length) {\n      s += '0';\n    }\n\n    return s;\n  }\n\n  static formatDate(originTime, format) {\n    let dateTime;\n\n    if (typeof originTime == \"string\") {\n      originTime = originTime.replace(/-/g, \"/\");\n      dateTime = new Date(originTime);\n    } else {\n      dateTime = originTime;\n    }\n\n    let date = {\n      \"M+\": dateTime.getMonth() + 1,\n      \"d+\": dateTime.getDate(),\n      \"h+\": dateTime.getHours(),\n      \"m+\": dateTime.getMinutes(),\n      \"s+\": dateTime.getSeconds(),\n      \"q+\": Math.floor((dateTime.getMonth() + 3) / 3),\n      \"S+\": dateTime.getMilliseconds()\n    };\n\n    if (/(y+)/i.test(format)) {\n      format = format.replace(RegExp.$1, (dateTime.getFullYear() + '').substr(4 - RegExp.$1.length));\n    }\n\n    for (let k in date) {\n      if (new RegExp(\"(\" + k + \")\").test(format)) {\n        format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : (\"00\" + date[k]).substr((\"\" + date[k]).length));\n      }\n    }\n\n    return format;\n  }\n  /**\n   *\n   * @param str  (null|undefined|''|'   '|[]|{}) return true\n   * @returns {boolean}\n   */\n\n\n  static isEmpty(str) {\n    if (!str) {\n      return true;\n    } else if (typeof str === 'object' && Object.keys(str).length === 0) {\n      return true;\n    } else if (str.replace(/(^\\s*)|(\\s*$)/g, \"\").length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  static generateUUID() {\n    let uuidv1_str = uuidv1() + \"\"; // timestamp ⇨ '3b99e3e0-7598-11e8-90be-95472fb3ecbd'\n\n    let uuidv4_str = uuidv4() + \"\"; //  Random ⇨ '3a017fc5-4f50-4db9-b0ce-4547ba0a1bfd'\n\n    let uuid = uuidv1_str.replace(/-/g, \"\");\n    return base64.encode(uuid);\n  }\n\n  static randomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  static randomString(length, chars) {\n    if (!chars) chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let result = '';\n\n    for (let i = length; i > 0; --i) {\n      result += chars[Math.floor(Math.random() * chars.length)];\n    }\n\n    return result;\n  }\n\n  static generateNodeId() {\n    return this.encodeBase64(this.randomString(64));\n  }\n\n  static cutEthAddress(address) {\n    if (!address || address.length < 10) return '';\n    return address.substring(0, 9) + \"..........\" + address.substring(address.length - 5, address.length);\n  }\n\n  static log(message) {\n    console.debug(message);\n  }\n\n  static getBrowserLanguage() {\n    let lang = navigator.language || navigator.userLanguage;\n    lang = lang.substr(0, 2);\n\n    if (lang === 'zh') {\n      return window.constants.LANGUAGE_CN;\n    } else {\n      return window.constants.LANGUAGE_EN;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/wangxi05104/Desktop/bitgas-website/src/tools/CommonUtils.js"],"names":["Component","uuidv1","require","uuidv4","base64","CommonUtils","encodeBase64","str","encode","decodeBase64","decode","checkEmail","reg","test","console","log","toDecimal","value","length","f","parseFloat","isNaN","x_len","Math","pow","round","s","toString","rs","indexOf","formatDate","originTime","format","dateTime","replace","Date","date","getMonth","getDate","getHours","getMinutes","getSeconds","floor","getMilliseconds","RegExp","$1","getFullYear","substr","k","isEmpty","Object","keys","generateUUID","uuidv1_str","uuidv4_str","uuid","randomInt","max","random","randomString","chars","result","i","generateNodeId","cutEthAddress","address","substring","message","debug","getBrowserLanguage","lang","navigator","language","userLanguage","window","constants","LANGUAGE_CN","LANGUAGE_EN"],"mappings":"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","sourcesContent":["/**\n * Wallchain\n * Copyright 2018-Present The Wallchain Foundation\n *\n * This product includes software developed at The Wallchain Foundation.\n *\n * This file is part of the Wallchain library.\n * The Wallchain library is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * The Wallchain library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\n * along with the Wallchain library. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {Component} from \"react\";\nconst uuidv1 = require('uuid/v1');\nconst uuidv4 = require('uuid/v4');\nconst base64 = require('base-64');\n\nexport default class CommonUtils extends Component{\n\n    static encodeBase64(str){\n        return base64.encode(str);\n    }\n\n    static decodeBase64(str){\n        return base64.decode(str);\n    }\n\n    static checkEmail(str) {\n        let reg = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (reg.test(str)) {\n            return true;\n        } else {\n            console.log(\"invalid email\");\n            return false;\n        }\n    }\n\n    static toDecimal(value, length) {\n        if(!length)\n            length = 2;\n        let f = parseFloat(value);\n        if (isNaN(f)) {\n            return false;\n        }\n        let x_len = Math.pow(10, length);\n        f = Math.round(value * x_len) / x_len;\n        let s = f.toString();\n        let rs = s.indexOf('.');\n        if (rs < 0) {\n            rs = s.length;\n            s += '.'\n        }\n        while (s.length <= rs + length) {\n            s += '0'\n        }\n        return s;\n    }\n\n    static formatDate(originTime, format) {\n        let dateTime;\n        if(typeof originTime == \"string\"){\n            originTime = originTime.replace(/-/g,\"/\");\n            dateTime = new Date(originTime);\n        }else{\n            dateTime = originTime;\n        }\n        let date = {\n            \"M+\": dateTime.getMonth() + 1,\n            \"d+\": dateTime.getDate(),\n            \"h+\": dateTime.getHours(),\n            \"m+\": dateTime.getMinutes(),\n            \"s+\": dateTime.getSeconds(),\n            \"q+\": Math.floor((dateTime.getMonth() + 3) / 3),\n            \"S+\": dateTime.getMilliseconds()\n        };\n        if (/(y+)/i.test(format)) {\n            format = format.replace(RegExp.$1, (dateTime.getFullYear() + '').substr(4 - RegExp.$1.length));\n        }\n        for (let k in date) {\n            if (new RegExp(\"(\" + k + \")\").test(format)) {\n                format = format.replace(RegExp.$1, RegExp.$1.length == 1\n                    ? date[k] : (\"00\" + date[k]).substr((\"\" + date[k]).length));\n            }\n        }\n        return format;\n    }\n\n    /**\n     *\n     * @param str  (null|undefined|''|'   '|[]|{}) return true\n     * @returns {boolean}\n     */\n    static isEmpty(str) {\n        if (!str) {\n            return true;\n        } else if (typeof str === 'object' && Object.keys(str).length === 0) {\n            return true;\n        } else if (str.replace(/(^\\s*)|(\\s*$)/g, \"\").length === 0) {\n            return true;\n        }\n        return false;\n    }\n\n    static generateUUID() {\n        let uuidv1_str = uuidv1() + \"\"; // timestamp ⇨ '3b99e3e0-7598-11e8-90be-95472fb3ecbd'\n        let uuidv4_str = uuidv4() + \"\"; //  Random ⇨ '3a017fc5-4f50-4db9-b0ce-4547ba0a1bfd'\n        let uuid = uuidv1_str.replace(/-/g, \"\");\n\n        return base64.encode(uuid);\n    }\n\n    static randomInt(max){\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    static randomString(length, chars) {\n        if(!chars)\n            chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        let result = '';\n        for (let i = length; i > 0; --i) {\n            result += chars[Math.floor(Math.random() * chars.length)];\n        }\n        return result;\n    }\n\n    static generateNodeId() {\n        return this.encodeBase64(this.randomString(64))\n    }\n\n    static cutEthAddress(address){\n        if(!address || address.length < 10)\n            return '';\n        return address.substring(0, 9) + \"..........\" + address.substring(address.length - 5, address.length);\n    }\n\n    static log(message) {\n        console.debug(message)\n    }\n\n    static getBrowserLanguage() {\n        let lang = navigator.language || navigator.userLanguage;\n        lang = lang.substr(0, 2);\n        if (lang === 'zh') {\n            return window.constants.LANGUAGE_CN\n        } else {\n            return window.constants.LANGUAGE_EN\n        }\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}