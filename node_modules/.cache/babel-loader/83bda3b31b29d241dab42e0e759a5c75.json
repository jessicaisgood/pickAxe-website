{"ast":null,"code":"var _jsxFileName = \"/Users/wangxi05104/Desktop/website/src/views/modal/LoginRegisterModal.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../../styles/modal/login-modal.module.scss';\nimport 'antd/dist/antd.css';\nimport { Modal, Input, Alert, Button, message, Icon } from 'antd';\nimport CommonUtils from \"../../tools/CommonUtils\";\nimport StorageUtils from \"../../tools/StorageUtils\";\nimport WebServerRestClient from \"../../tools/WebServerRestClient\";\nexport default class LoginRegisterModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true,\n      email: '',\n      password: '',\n      showMessageDialog: false\n    };\n  }\n\n  componentDidMount() {}\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleInputFocus(event) {\n    const target = event.target;\n\n    if (target.type === 'text' || target.type === 'password') {\n      this.setState({\n        showMessageDialog: false\n      });\n    }\n  }\n\n  login() {\n    this.setState({\n      showMessageDialog: false\n    });\n    let email = this.state.email;\n    let password = this.state.password;\n\n    if (email == '') {\n      this.setState({\n        showMessageDialog: true,\n        message: \"Please enter the email address\"\n      });\n      return false;\n    }\n\n    if (!CommonUtils.checkEmail(email)) {\n      this.setState({\n        showMessageDialog: true,\n        message: \"Invalid email address format\"\n      });\n      return false;\n    }\n\n    if (password == '') {\n      this.setState({\n        showMessageDialog: true,\n        message: \"please enter the password\"\n      });\n      return false;\n    }\n\n    this.setState({\n      doing: true\n    });\n    new WebServerRestClient().POST('/open/web/login', {\n      email: this.state.email,\n      password: this.state.password\n    }).then(response => {\n      console.log(\"login response -> \" + JSON.stringify(response));\n      this.setState({\n        doing: false\n      });\n\n      if (response.code == 200) {\n        let userInfo = {\n          userId: response.data.userId,\n          email: response.data.email,\n          ethAddress: response.data.ethAddress,\n          token: response['msg']\n        };\n        StorageUtils.saveUser(userInfo);\n        window.CurrentUser = userInfo;\n        this.props.loginCallback();\n      } else {\n        this.setState({\n          showMessageDialog: true,\n          message: response['msg']\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        doing: false\n      });\n      message.error(\"Error: \" + err.message);\n    });\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      closable: false,\n      keyboard: true,\n      maskClosable: true,\n      destroyOnClose: true,\n      footer: null,\n      visible: this.props.visible,\n      onCancel: () => this.props.onRequestClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal_close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"close-circle\",\n      onClick: () => this.props.onRequestClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.login,\n      style: {\n        display: this.state.isLogin ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.logo_image,\n      src: require('../../images/logo.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.logo_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"SquirrelVPN\\u767B\\u5F55\"), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: 'text',\n      name: 'email',\n      className: styles.form_input,\n      placeholder: 'someone@gmail.com',\n      autoCapitalize: 'none',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      type: 'password',\n      name: 'password',\n      className: styles.form_input,\n      placeholder: 'Password',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.showMessageDialog ? React.createElement(\"div\", {\n      className: \"message_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      message: this.state.message,\n      type: \"warning\",\n      closable: true,\n      onClose: () => {\n        this.setState({\n          showMessageDialog: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      className: styles.form_button_row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: styles.form_button,\n      loading: this.state.loading,\n      onClick: this.login.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\")), React.createElement(\"div\", {\n      className: styles.link_download,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: styles.link_download,\n      onClick: () => this.setState({\n        isLogin: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"\\u8FD8\\u6CA1\\u6709\\u8D26\\u53F7\\uFF1F\\u6CE8\\u518C\"))), React.createElement(\"div\", {\n      className: styles.login,\n      style: {\n        display: this.state.isLogin ? 'none' : 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.logo_image,\n      src: require('../../images/logo.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.logo_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"SquirrelVPN\\u6CE8\\u518C\"), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: 'text',\n      name: 'email',\n      className: styles.form_input,\n      placeholder: 'someone@gmail.com',\n      autoCapitalize: 'none',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      type: 'password',\n      name: 'password',\n      className: styles.form_input,\n      style: {\n        textIndent: 0\n      },\n      placeholder: 'Password',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: 'text',\n      name: 'email',\n      className: styles.form_validation_input,\n      placeholder: 'Validation Code',\n      autoCapitalize: 'none',\n      onFocus: this.handleInputFocus.bind(this),\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: styles.form_validation_button,\n      loading: this.state.loading,\n      onClick: this.login.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Send\")), React.createElement(\"div\", {\n      className: styles.form_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.showMessageDialog ? React.createElement(\"div\", {\n      className: \"message_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      message: this.state.message,\n      type: \"warning\",\n      closable: true,\n      onClose: () => {\n        this.setState({\n          showMessageDialog: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      className: styles.form_button_row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: styles.form_button,\n      loading: this.state.loading,\n      onClick: this.login.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\")), React.createElement(\"div\", {\n      className: styles.link_download,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: styles.link_download,\n      onClick: () => this.setState({\n        isLogin: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\u5DF2\\u6709\\u8D26\\u53F7\\uFF1F\\u767B\\u5F55\"))));\n  }\n\n}\nLoginRegisterModal.propTypes = {\n  visible: PropTypes.bool,\n  loginCallback: PropTypes.func,\n  onRequestClose: PropTypes.func\n};","map":{"version":3,"sources":["/Users/wangxi05104/Desktop/website/src/views/modal/LoginRegisterModal.js"],"names":["React","PropTypes","styles","Modal","Input","Alert","Button","message","Icon","CommonUtils","StorageUtils","WebServerRestClient","LoginRegisterModal","Component","constructor","props","state","isLogin","email","password","showMessageDialog","componentDidMount","handleInputChange","event","target","value","type","checked","name","setState","handleInputFocus","login","checkEmail","doing","POST","then","response","console","log","JSON","stringify","code","userInfo","userId","data","ethAddress","token","saveUser","window","CurrentUser","loginCallback","catch","err","error","render","visible","onRequestClose","display","logo_image","require","logo_title","form_item","form_input","bind","form_button_row","form_button","loading","link_download","textIndent","form_validation_input","form_validation_button","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../../styles/modal/login-modal.module.scss';\nimport 'antd/dist/antd.css';\nimport {Modal, Input, Alert, Button, message, Icon} from 'antd';\nimport CommonUtils from \"../../tools/CommonUtils\";\nimport StorageUtils from \"../../tools/StorageUtils\";\nimport WebServerRestClient from \"../../tools/WebServerRestClient\";\n\nexport default class LoginRegisterModal extends React.Component {\n\n    static propTypes = {\n        visible: PropTypes.bool,\n        loginCallback: PropTypes.func,\n        onRequestClose: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: true,\n            email: '',\n            password: '',\n            showMessageDialog: false\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({[name]: value});\n    }\n\n    handleInputFocus(event) {\n        const target = event.target;\n        if (target.type === 'text' || target.type === 'password') {\n            this.setState({showMessageDialog: false});\n        }\n    }\n\n    login() {\n        this.setState({showMessageDialog: false});\n        let email = this.state.email;\n        let password = this.state.password;\n        if (email == '') {\n            this.setState({showMessageDialog: true, message: \"Please enter the email address\"});\n            return false;\n        }\n        if(!CommonUtils.checkEmail(email)){\n            this.setState({showMessageDialog: true, message: \"Invalid email address format\"});\n            return false;\n        }\n        if (password == '') {\n            this.setState({showMessageDialog: true, message: \"please enter the password\"});\n            return false;\n        }\n        this.setState({doing: true});\n        new WebServerRestClient().POST('/open/web/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(response => {\n            console.log(\"login response -> \" + JSON.stringify(response));\n            this.setState({doing: false});\n            if (response.code == 200) {\n                let userInfo = {\n                    userId: response.data.userId,\n                    email: response.data.email,\n                    ethAddress: response.data.ethAddress,\n                    token: response['msg']\n                };\n                StorageUtils.saveUser(userInfo);\n                window.CurrentUser = userInfo;\n                this.props.loginCallback();\n            } else {\n                this.setState({showMessageDialog: true, message: response['msg']});\n            }\n        }).catch(err => {\n            this.setState({doing: false});\n            message.error(\"Error: \" + err.message);\n        });\n    }\n\n    render() {\n        return (\n            <Modal\n                closable={false}\n                keyboard={true}\n                maskClosable={true}\n                destroyOnClose={true}\n                footer={null}\n                visible={this.props.visible}\n                onCancel={() => this.props.onRequestClose()}>\n                <div className=\"modal_close\">\n                    <Icon type=\"close-circle\" onClick={() => this.props.onRequestClose()}/>\n                </div>\n                <div className={styles.login} style={{display: this.state.isLogin ? 'block' : 'none'}}>\n                    <img className={styles.logo_image} src={require('../../images/logo.png')}/>\n                    <div className={styles.logo_title}>SquirrelVPN登录</div>\n                    <div className={styles.form_item}>\n                        <Input type={'text'} name={'email'} className={styles.form_input}\n                               placeholder={'someone@gmail.com'}\n                               autoCapitalize={'none'}\n                               onFocus={this.handleInputFocus.bind(this)}\n                               onChange={this.handleInputChange.bind(this)}/>\n                    </div>\n                    <div className={styles.form_item}>\n                        <Input.Password type={'password'} name={'password'} className={styles.form_input}\n                               placeholder={'Password'}\n                               onFocus={this.handleInputFocus.bind(this)}\n                               onChange={this.handleInputChange.bind(this)}/>\n                    </div>\n                    <div className={styles.form_item}>\n                        {this.state.showMessageDialog ?\n                            <div className=\"message_box\">\n                                <Alert message={this.state.message} type=\"warning\" closable={true}\n                                       onClose={() => {\n                                           this.setState({showMessageDialog: false})\n                                       }}/>\n                            </div>\n                            :\n                            null\n                        }\n                    </div>\n                    <div className={styles.form_button_row}>\n                        <Button className={styles.form_button} loading={this.state.loading}\n                                onClick={this.login.bind(this)}>登录</Button>\n                    </div>\n                    <div className={styles.link_download}>\n                        <span className={styles.link_download} onClick={()=>this.setState({isLogin: false})}>还没有账号？注册</span>\n                    </div>\n                </div>\n\n                <div className={styles.login} style={{display: this.state.isLogin ? 'none' : 'block'}}>\n                    <img className={styles.logo_image} src={require('../../images/logo.png')}/>\n                    <div className={styles.logo_title}>SquirrelVPN注册</div>\n                    <div className={styles.form_item}>\n                        <Input type={'text'} name={'email'} className={styles.form_input}\n                               placeholder={'someone@gmail.com'}\n                               autoCapitalize={'none'}\n                               onFocus={this.handleInputFocus.bind(this)}\n                               onChange={this.handleInputChange.bind(this)}/>\n                    </div>\n                    <div className={styles.form_item}>\n                        <Input.Password  type={'password'} name={'password'} className={styles.form_input}\n                               style={{textIndent: 0}}\n                               placeholder={'Password'}\n                               onFocus={this.handleInputFocus.bind(this)}\n                               onChange={this.handleInputChange.bind(this)}/>\n                    </div>\n                    <div className={styles.form_item}>\n                        <Input type={'text'} name={'email'} className={styles.form_validation_input}\n                               placeholder={'Validation Code'}\n                               autoCapitalize={'none'}\n                               onFocus={this.handleInputFocus.bind(this)}\n                               onChange={this.handleInputChange.bind(this)}/>\n                        <Button className={styles.form_validation_button} loading={this.state.loading}\n                                onClick={this.login.bind(this)}>Send</Button>\n                    </div>\n                    <div className={styles.form_item}>\n                        {this.state.showMessageDialog ?\n                            <div className=\"message_box\">\n                                <Alert message={this.state.message} type=\"warning\" closable={true}\n                                       onClose={() => {\n                                           this.setState({showMessageDialog: false})\n                                       }}/>\n                            </div>\n                            :\n                            null\n                        }\n                    </div>\n                    <div className={styles.form_button_row}>\n                        <Button className={styles.form_button} loading={this.state.loading}\n                                onClick={this.login.bind(this)}>注册</Button>\n                    </div>\n                    <div className={styles.link_download}>\n                        <span className={styles.link_download} onClick={()=>this.setState({isLogin: true})}>已有账号？登录</span>\n                    </div>\n                </div>\n            </Modal>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}